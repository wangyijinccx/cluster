<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ipeaksoft.moneyday.core.mapper.StatCashMapper">
	<resultMap id="BaseResultMap" type="com.ipeaksoft.moneyday.core.entity.StatCash">
		<id column="day" property="day" jdbcType="DATE" />
		<result column="recharge_amount" property="rechargeAmount"
			jdbcType="INTEGER" />
		<result column="recharge_online_amount" property="rechargeOnlineAmount"
			jdbcType="INTEGER" />
		<result column="recharge_online_times" property="rechargeOnlineTimes"
			jdbcType="INTEGER" />
		<result column="recharge_offline_amount" property="rechargeOfflineAmount"
			jdbcType="INTEGER" />
		<result column="recharge_offline_times" property="rechargeOfflineTimes"
			jdbcType="INTEGER" />
		<result column="cash_amount" property="cashAmount" jdbcType="INTEGER" />
		<result column="cash_online_amount" property="cashOnlineAmount"
			jdbcType="INTEGER" />
		<result column="cash_online_times" property="cashOnlineTimes"
			jdbcType="INTEGER" />
		<result column="cash_offline_amount" property="cashOfflineAmount"
			jdbcType="INTEGER" />
		<result column="cash_offline_times" property="cashOfflineTimes"
			jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="INTEGER" />
		<result column="pending_count" property="pendingCount"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		day, recharge_amount, recharge_online_amount,
		recharge_online_times,
		recharge_offline_amount,
		recharge_offline_times,
		cash_amount, cash_online_amount, cash_online_times,
		cash_offline_amount,
		cash_offline_times, amount, pending_count
	</sql>
	<select id="selectPageByDay" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_stat_cash WHERE 1 = 1
		<if test="from != ''">
			<![CDATA[  AND day >= #{from,jdbcType=VARCHAR} ]]>
		</if>
		<if test="to != ''">
			<![CDATA[  AND day <= #{to,jdbcType=VARCHAR} ]]>
		</if>
		ORDER BY day
		<if test="dir!=null and dir == 'desc'">
			DESC
		</if>
		<if test="start !=null and size != null">
	    <![CDATA[ LIMIT #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER} ]]>
		</if>
	</select>
	<select id="countAllByWhere" resultType="Integer" parameterType="java.util.Map">
		SELECT count(*)
		FROM tb_stat_cash c WHERE 1 = 1
		<if test="from!=null and from != ''">
			<![CDATA[  AND c.day >= #{from,jdbcType=VARCHAR} ]]>
		</if>
		<if test="to!=null and to != ''">
			<![CDATA[  AND c.day <= #{to,jdbcType=VARCHAR} ]]>
		</if>
	</select>
	<select id="getAllMoney" resultType="Integer">
		SELECT SUM(amount) FROM
		tb_stat_cash
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.util.Date">
		SELECT
		<include refid="Base_Column_List" />
		FROM tb_stat_cash
		WHERE day = #{day,jdbcType=DATE}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.util.Date">
		DELETE FROM
		tb_stat_cash
		WHERE day = #{day,jdbcType=DATE}
	</delete>
	<insert id="insert" parameterType="com.ipeaksoft.moneyday.core.entity.StatCash">
		INSERT IGNORE INTO
		tb_stat_cash (day, recharge_amount,
		recharge_online_amount,
		recharge_online_times, recharge_offline_amount,
		recharge_offline_times, cash_amount, cash_online_amount,
		cash_online_times, cash_offline_amount, cash_offline_times,
		amount,
		pending_count)
		values (#{day,jdbcType=DATE},
		#{rechargeAmount,jdbcType=INTEGER},
		#{rechargeOnlineAmount,jdbcType=INTEGER},
		#{rechargeOnlineTimes,jdbcType=INTEGER},
		#{rechargeOfflineAmount,jdbcType=INTEGER},
		#{rechargeOfflineTimes,jdbcType=INTEGER},
		#{cashAmount,jdbcType=INTEGER}, #{cashOnlineAmount,jdbcType=INTEGER},
		#{cashOnlineTimes,jdbcType=INTEGER},
		#{cashOfflineAmount,jdbcType=INTEGER},
		#{cashOfflineTimes,jdbcType=INTEGER},
		#{amount,jdbcType=INTEGER},
		#{pendingCount,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.ipeaksoft.moneyday.core.entity.StatCash">
		INSERT INTO tb_stat_cash
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="day != null">
				day,
			</if>
			<if test="rechargeAmount != null">
				recharge_amount,
			</if>
			<if test="rechargeOnlineAmount != null">
				recharge_online_amount,
			</if>
			<if test="rechargeOnlineTimes != null">
				recharge_online_times,
			</if>
			<if test="rechargeOfflineAmount != null">
				recharge_offline_amount,
			</if>
			<if test="rechargeOfflineTimes != null">
				recharge_offline_times,
			</if>
			<if test="cashAmount != null">
				cash_amount,
			</if>
			<if test="cashOnlineAmount != null">
				cash_online_amount,
			</if>
			<if test="cashOnlineTimes != null">
				cash_online_times,
			</if>
			<if test="cashOfflineAmount != null">
				cash_offline_amount,
			</if>
			<if test="cashOfflineTimes != null">
				cash_offline_times,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="pendingCount != null">
				pending_count,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="day != null">
				#{day,jdbcType=DATE},
			</if>
			<if test="rechargeAmount != null">
				#{rechargeAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOnlineAmount != null">
				#{rechargeOnlineAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOnlineTimes != null">
				#{rechargeOnlineTimes,jdbcType=INTEGER},
			</if>
			<if test="rechargeOfflineAmount != null">
				#{rechargeOfflineAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOfflineTimes != null">
				#{rechargeOfflineTimes,jdbcType=INTEGER},
			</if>
			<if test="cashAmount != null">
				#{cashAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOnlineAmount != null">
				#{cashOnlineAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOnlineTimes != null">
				#{cashOnlineTimes,jdbcType=INTEGER},
			</if>
			<if test="cashOfflineAmount != null">
				#{cashOfflineAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOfflineTimes != null">
				#{cashOfflineTimes,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=INTEGER},
			</if>
			<if test="pendingCount != null">
				#{pendingCount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ipeaksoft.moneyday.core.entity.StatCash">
		update tb_stat_cash
		<set>
			<if test="rechargeAmount != null">
				recharge_amount = #{rechargeAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOnlineAmount != null">
				recharge_online_amount =
				#{rechargeOnlineAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOnlineTimes != null">
				recharge_online_times =
				#{rechargeOnlineTimes,jdbcType=INTEGER},
			</if>
			<if test="rechargeOfflineAmount != null">
				recharge_offline_amount =
				#{rechargeOfflineAmount,jdbcType=INTEGER},
			</if>
			<if test="rechargeOfflineTimes != null">
				recharge_offline_times =
				#{rechargeOfflineTimes,jdbcType=INTEGER},
			</if>
			<if test="cashAmount != null">
				cash_amount = #{cashAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOnlineAmount != null">
				cash_online_amount =
				#{cashOnlineAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOnlineTimes != null">
				cash_online_times = #{cashOnlineTimes,jdbcType=INTEGER},
			</if>
			<if test="cashOfflineAmount != null">
				cash_offline_amount =
				#{cashOfflineAmount,jdbcType=INTEGER},
			</if>
			<if test="cashOfflineTimes != null">
				cash_offline_times =
				#{cashOfflineTimes,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=INTEGER},
			</if>
			<if test="pendingCount != null">
				pending_count = #{pendingCount,jdbcType=INTEGER},
			</if>
		</set>
		where date(day) = date(#{day,jdbcType=DATE})
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ipeaksoft.moneyday.core.entity.StatCash">
		update
		tb_stat_cash
		set recharge_amount = #{rechargeAmount,jdbcType=INTEGER},
		recharge_online_amount = #{rechargeOnlineAmount,jdbcType=INTEGER},
		recharge_online_times = #{rechargeOnlineTimes,jdbcType=INTEGER},
		recharge_offline_amount = #{rechargeOfflineAmount,jdbcType=INTEGER},
		recharge_offline_times = #{rechargeOfflineTimes,jdbcType=INTEGER},
		cash_amount = #{cashAmount,jdbcType=INTEGER},
		cash_online_amount =
		#{cashOnlineAmount,jdbcType=INTEGER},
		cash_online_times =
		#{cashOnlineTimes,jdbcType=INTEGER},
		cash_offline_amount =
		#{cashOfflineAmount,jdbcType=INTEGER},
		cash_offline_times =
		#{cashOfflineTimes,jdbcType=INTEGER},
		amount =
		#{amount,jdbcType=INTEGER},
		pending_count =
		#{pendingCount,jdbcType=INTEGER}
		where day = #{day,jdbcType=DATE}
	</update>
</mapper>